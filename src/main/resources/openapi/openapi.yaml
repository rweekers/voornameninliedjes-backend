openapi: 3.0.3
info:
  title: Voornamen in liedjes API
  version: 1.0.0
  description: API for retrieving songs and artists.

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.voornameninliedjes.nl
    description: Production server

paths:
  /api/artists:
    get:
      tags:
        - Artists
      summary: Get list of artists
      description: Returns a list of artists with their name and image URL.
      operationId: getApiArtists
      responses:
        '200':
          description: A list of artists.
          content:
            application/vnd.voornameninliedjes.artists.v2+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtistDto'
        '500':
          description: Server error
    post:
      tags:
        - Artists
      summary: Create a new artist
      description: Adds a new artist to the system.
      operationId: createArtist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewArtistDto'
      responses:
        '201':
          description: Artist created
          content:
            application/vnd.voornameninliedjes.artists.v2+json:
              schema:
                $ref: '#/components/schemas/ArtistDto'
        '400':
          description: Invalid input
        '409':
          description: Artist with the same name already exists
          content:
            application/vnd.voornameninliedjes.artists.v2+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
  /api/artists/{artistId}:
    get:
      tags:
        - Artists
      summary: Get a single artist
      description: Returns a single artist by ID.
      operationId: getArtistById
      parameters:
        - name: artistId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A single artist
          content:
            application/vnd.voornameninliedjes.artists.v2+json:
              schema:
                $ref: '#/components/schemas/ArtistDto'
        '404':
          description: Artist not found
          content: {}
        '500':
          description: Server error
    put:
      tags:
        - Artists
      summary: Update an artist
      description: Updates the data of an existing artist.
      operationId: updateArtist
      parameters:
        - name: artistId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewArtistDto'
      responses:
        '200':
          description: Artist updated
          content:
            application/vnd.voornameninliedjes.artists.v2+json:
              schema:
                $ref: '#/components/schemas/ArtistDto'
        '404':
          description: Artist not found
        '500':
          description: Server error

    delete:
      tags:
        - Artists
      summary: Delete an artist
      description: Removes an artist from the system.
      operationId: deleteArtist
      parameters:
        - name: artistId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Artist deleted
          content:
            application/vnd.voornameninliedjes.artists.v2+json: {}
        '500':
          description: Server error
  /api/songs:
    get:
      tags:
        - Songs
      summary: Get list of songs
      description: Returns a list of songs
      operationId: getApiSongs
      parameters:
        - in: query
          name: name-starts-with
          schema:
            type: string
            minLength: 1
            maxLength: 50
          required: false
          description: first characters of the name in the title of the song
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: The number of items to return.
      responses:
        '200':
          description: A list of songs.
          content:
            application/vnd.voornameninliedjes.songs.v2+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
        '500':
          description: Server error
  /api/songs/{artist}/{title}:
    get:
      tags:
        - Songs
      summary: Get details of a song
      operationId: getApiSongDetail
      parameters:
        - name: artist
          in: path
          required: true
          schema:
            type: string
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed song information
          content:
            application/vnd.voornameninliedjes.songs.v2+json:
              schema:
                $ref: "#/components/schemas/SongDetail"
        '404':
          description: Song not found
        '500':
          description: Server error

components:
  schemas:
    ArtistDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Name of the artist
          example: "The Police"
        imageUrl:
          type: string
          description: URL to an image of the artist
          format: uri
          example: "https://example.com/images/john_doe.jpg"
      required:
        - id
        - name
    NewArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the artist
          example: "The Police"
        imageUrl:
          type: string
          description: URL to an image of the artist
          format: uri
          example: "https://example.com/images/john_doe.jpg"
      required:
        - name
    Song:
      type: object
      properties:
        artist:
          type: string
          description: Name of the artist
          example: "Paul Simon"
        title:
          type: string
          description: Title of the track
          example: "You Can Call Me Al"
        name:
          type: string
          description: Name in title of the track
          example: "Al"
        hasDetails:
          type: boolean
          description: If there are details known about a song
          example: true
        artistImage:
          type: string
          description: Online reference to the image for the song
          format: uri
          example: "the-police-roxanne"
        artistImageAttribution:
          type: string
          description: Attribution for the photo
          example: "Photo by x, to be found at y"
        localImage:
          type: string
          description: Local reference to the image for the song
          example: "the-police_roxanne"
        artistImageWidth:
          type: integer
          minimum: 0
          description: Width of the image
          example: 800
        artistImageHeight:
          type: integer
          minimum: 0
          description: Height of the image
          example: 500
      required:
        - artist
        - title
        - name
        - hasDetails
    SongDetail:
      type: object
      properties:
        artist:
          type: string
          description: Name of the artist
          example: "Paul Simon"
        title:
          type: string
          description: Title of the track
          example: "You Can Call Me Al"
        name:
          type: string
          description: Name in title of the track
          example: "Al"
        hasDetails:
          type: boolean
          description: If there are details known about a song
          example: true
        youtube:
          type: string
          description: Link to YouTube video of the song
        spotify:
          type: string
          description: Link to Spotify video of the song
        background:
          type: string
          description: Background of the song
        localImage:
          type: string
          description: Local reference to the image for the song
          example: "the-police-roxanne"
        artistImageWidth:
          type: integer
          minimum: 0
          description: Width of the image
          example: 800
        artistImageHeight:
          type: integer
          minimum: 0
          description: Height of the image
          example: 500
        wikimediaPhotos:
          type: array
          items:
            $ref: '#/components/schemas/WikimediaPhoto'
        sources:
          type: array
          items:
            type: string
      required:
        - artist
        - title
        - name
        - hasDetails
    WikimediaPhoto:
      type: object
      properties:
        url:
          type: string
          format: uri
        attribution:
          type: string
      required:
        - url
        - attribution

    ErrorResponse:
      type: object
      required:
        - timestamp
        - status
        - error
        - message
        - path
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-06-05T14:23:45.123Z"
        status:
          type: integer
          example: 409
        error:
          type: string
          example: "Conflict"
        message:
          type: string
          example: "Artist with name 'The Beatles' already exists"