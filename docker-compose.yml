services:
  db:
    image: postgres:17.5-bookworm
    restart: unless-stopped
    environment:
      POSTGRES_USER: vil_app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: voornameninliedjes
    ports:
      - "5432:5432"
  app-jvm:
    image: rweekers/voornameninliedjes-backend:3.3.0-jvm
    user: ${UID}:${GID}
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: dev
      LOG_PATH: /workspace/logs
      CONTAINER: jvm
      voornameninliedjes.datasource.application.jdbcUrl: jdbc:postgresql://db:5432/voornameninliedjes
      voornameninliedjes.datasource.migration.jdbcUrl: jdbc:postgresql://db:5432/voornameninliedjes
      voornameninliedjes.images.service.path: http://localhost:8000/images/
      jobs.updateSong.cron: "-"
      jobs.enrichSong.enabled: false
    ports:
      - "8080:8080"
    volumes:
      - "./logs-docker:/workspace/logs"
      - "./images:/workspace/images"
    depends_on:
      - db
  app-native:
    image: rweekers/voornameninliedjes-backend:3.3.0-native
    user: ${UID}:${GID}
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: dev
      LOG_PATH: /workspace/logs
      server.port: 9000
      voornameninliedjes.datasource.application.jdbcUrl: jdbc:postgresql://db:5432/voornameninliedjes
      voornameninliedjes.datasource.migration.jdbcUrl: jdbc:postgresql://db:5432/voornameninliedjes
      voornameninliedjes.images.service.path: http://localhost:8000/images/
      jobs.updateSong.cron: "-"
      jobs.enrichSong.enabled: false
    ports:
      - "9000:9000"
    volumes:
      - "./logs-docker:/workspace/logs"
      - "./images:/workspace/images"
    depends_on:
      - db

  loki:
    image: grafana/loki:3.5.1
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:3.5.1
    volumes:
      - ./logs-docker:/var/log/app
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  prometheus:
    image: prom/prometheus:v3.4.2
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:12.0.2
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=supersecret
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    depends_on:
      - loki

  frontend:
    image: rweekers/voornameninliedjes-frontend:1.0.0
    ports:
      - "3000:3000"
    env_file:
      - .env.production-docker
    environment:
      NODE_ENV: production
